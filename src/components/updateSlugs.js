import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// ‚¨áÔ∏è –ü–æ–¥–¥–µ—Ä–∂–∫–∞ __dirname –≤ ES-–º–æ–¥—É–ª—è—Ö
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç–∏
const blogDir = path.resolve(__dirname, '../../public/blog');
const slugsFilePath = path.resolve(__dirname, '../../src/components/getBlogPosts.tsx');

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ slug'–æ–≤ –∏–∑ .json —Ñ–∞–π–ª–æ–≤
function getSlugs() {
  console.log('üìÇ –ß–∏—Ç–∞–µ–º public/blog...');
  const files = fs.readdirSync(blogDir);
  const slugs = files
    .filter(f => f.endsWith('.json'))
    .map(f => f.replace('.json', ''))
    .sort();

  console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ slug-—Ñ–∞–π–ª–æ–≤: ${slugs.length}`);
  return slugs;
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª getBlogPosts.tsx –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ä–∞–º–∏
function updateSlugsFile(slugs) {
  console.log('üìÑ –ß–∏—Ç–∞–µ–º getBlogPosts.tsx:', slugsFilePath);
  let content;

  try {
    content = fs.readFileSync(slugsFilePath, 'utf-8');
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', e.message);
    process.exit(1);
  }

  const startMarker = '/* START SLUGS */';
  const endMarker = '/* END SLUGS */';
  const regex = /\/\* START SLUGS \*\/[\s\S]*?\/\* END SLUGS \*\//;

  console.log('--- RAW FILE CONTENT ---');
  console.log(JSON.stringify(content.slice(0, 500))); // –ø–µ—Ä–≤—ã–µ 500 —Å–∏–º–≤–æ–ª–æ–≤

  const match = content.match(regex);
  if (!match) {
    console.error('‚ùå –†–µ–≥—É–ª—è—Ä–∫–∞ –Ω–µ –Ω–∞—à–ª–∞ —Ç–µ–∫—Å—Ç –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ä–∞–º–∏');
    process.exit(1);
  }

  console.log('--- –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ –º–µ–∂–¥—É –º–∞—Ä–∫–µ—Ä–∞–º–∏ ---');
  console.log(match[0]);

  const newSlugsString = JSON.stringify(slugs, null, 2);
  const replacement = `${startMarker}\nexport const slugs = ${newSlugsString};\n${endMarker}`;

  console.log('--- –ù–æ–≤—ã–π –±–ª–æ–∫ –¥–ª—è –≤—Å—Ç–∞–≤–∫–∏ ---');
  console.log(replacement);

  const newContent = content.replace(regex, replacement);

  if (newContent === content) {
    console.log('‚ö†Ô∏è –ó–∞–º–µ–Ω–∞ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–∞ —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å.');
    return; // –ù–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏ –Ω–µ –∫–æ–º–º–∏—Ç–∏–º
  }

  fs.writeFileSync(slugsFilePath, newContent, 'utf-8');
  console.log('‚úÖ –§–∞–π–ª getBlogPosts.tsx –æ–±–Ω–æ–≤–ª—ë–Ω!');
}


// üèÅ –ó–∞–ø—É—Å–∫
const slugs = getSlugs();
updateSlugsFile(slugs);

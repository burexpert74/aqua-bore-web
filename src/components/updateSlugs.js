import fs from 'fs';
import path from 'path';
import { fileURLToPath } from 'url';

// ‚¨áÔ∏è –ü—Ä–∞–≤–∏–ª—å–Ω—ã–π __dirname –¥–ª—è ES-–º–æ–¥—É–ª—è
const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);

// –ü—É—Ç–∏
const blogDir = path.resolve(__dirname, '../../public/blog');
const slugsFilePath = path.resolve(__dirname, 'getBlogPosts.tsx');

// –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Å–ª–∞–≥–æ–≤
function getSlugs() {
  console.log('üìÇ –ß–∏—Ç–∞–µ–º public/blog...');
  const files = fs.readdirSync(blogDir);
  const slugs = files
    .filter(f => f.endsWith('.json'))
    .map(f => f.replace('.json', ''))
    .sort();

  console.log('‚úÖ –ù–∞–π–¥–µ–Ω–æ slug-—Ñ–∞–π–ª–æ–≤:', slugs.length);
  return slugs;
}

// –û–±–Ω–æ–≤–ª—è–µ–º —Ñ–∞–π–ª —Å –º–∞—Ä–∫–µ—Ä–∞–º–∏
function updateSlugsFile(slugs) {
  console.log('üìÑ –ß–∏—Ç–∞–µ–º getBlogPosts.tsx:', slugsFilePath);
  let content;

  try {
    content = fs.readFileSync(slugsFilePath, 'utf-8');
  } catch (e) {
    console.error('‚ùå –û—à–∏–±–∫–∞ —á—Ç–µ–Ω–∏—è —Ñ–∞–π–ª–∞:', e.message);
    process.exit(1);
  }

  const startMarker = '/* START SLUGS */';
  const endMarker = '/* END SLUGS */';

  if (!content.includes(startMarker) || !content.includes(endMarker)) {
    console.error('‚ùå –ú–∞—Ä–∫–µ—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –≤ getBlogPosts.tsx');
    console.log('‚ÑπÔ∏è –ü–æ–∏—Å–∫:', { startMarker, endMarker });
    console.log('üìÑ –°–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞:\n---\n' + content.slice(0, 500) + '\n...');
    process.exit(1);
  }

  const regex = new RegExp(`${startMarker}[\\s\\S]*?${endMarker}`, 's');
  const newSlugsString = JSON.stringify(slugs, null, 2);
  const replacement = `${startMarker}\nexport const slugs = ${newSlugsString};\n${endMarker}`;
  const newContent = content.replace(regex, replacement);

  if (content === newContent) {
    console.log('‚ö†Ô∏è –°–æ–¥–µ—Ä–∂–∏–º–æ–µ getBlogPosts.tsx –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º –∑–∞–ø–∏—Å—å –∏ –∫–æ–º–º–∏—Ç.');
    return;
  }

  fs.writeFileSync(slugsFilePath, newContent, 'utf-8');
  console.log('‚úÖ –§–∞–π–ª getBlogPosts.tsx –æ–±–Ω–æ–≤–ª—ë–Ω!');
}


// –ó–∞–ø—É—Å–∫
try {
  const slugs = getSlugs();
  updateSlugsFile(slugs);
} catch (err) {
  console.error('‚ùå –û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∫—Ä–∏–ø—Ç–∞:', err.message);
  process.exit(1);
}
